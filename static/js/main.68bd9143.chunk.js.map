{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","expanded","onDetailsButtonClicked","setState","prevState","event","this","props","data","name","value","yes_rsvp_count","rsvp_limit","colors","className","local_time","local_date","group","height","width","dataKey","nameKey","cx","cy","outerRadius","label","map","entry","index","key","fill","iconSize","iconType","layout","verticalAlign","align","venue","address_1","city","localized_country_name","dangerouslySetInnerHTML","__html","description","visibility","href","link","target","rel","onClick","Component","EventList","events","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","lat","lon","repinned","country","is_online_event","join_mode","urlname","who","localized_location","region","timezone","member_pay_fee","getOrRenewAccessToken","type","a","url","axios","get","tokenInfo","localStorage","setItem","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","searchParams","URLSearchParams","window","location","search","code","lastSavedTime","refreshToken","getSuggestions","query","startsWith","name_string","zip","token","result","getEvents","page","navigator","onLine","JSON","parse","length","stringify","Alert","getStyle","color","style","text","InfoAlert","WarningAlert","ErrorAlert","CitySearch","suggestions","handleInputChanged","then","infoText","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","number","onNumberChanged","errorText","App","warningText","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","margin","top","right","bottom","left","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.68bd9143.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { PieChart, Pie, Tooltip, Cell, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    expanded: false,\r\n  }\r\n\r\n  onDetailsButtonClicked = () => {\r\n    this.setState(prevState => ({\r\n      expanded: !prevState.expanded\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const event = this.props.event;\r\n    const data = [{\r\n      name: \"taken\", value: event.yes_rsvp_count\r\n    }, {\r\n      name: \"available\", value: (event.rsvp_limit - event.yes_rsvp_count)\r\n    }];\r\n    const colors = [\"#1DE279\", \"#E21D86\"];\r\n\r\n    return (\r\n      <div className=\"Event\">\r\n        <p className=\"time\">\r\n          {event.local_time} - {event.local_date}\r\n        </p>\r\n        <p className=\"name\">\r\n          {event.name}\r\n        </p>\r\n\r\n        {event.group && event.group.name &&\r\n          <p className=\"group-name\">\r\n            Group: {event.group.name}\r\n          </p>}\r\n        <p className=\"going\">\r\n          {event.yes_rsvp_count} people are going\r\n          </p>\r\n\r\n        {event.rsvp_limit &&\r\n          <ResponsiveContainer height={150} width={250}>\r\n            <PieChart>\r\n              <Pie data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={32} label >\r\n                {\r\n                  data.map((entry, index) => (<Cell key={`cell-${index}`} fill={colors[index]} />))\r\n                }\r\n              </Pie>\r\n              <Legend iconSize={10} iconType=\"triangle\" layout=\"horizontal\" verticalAlign=\"bottom\" align=\"center\" />\r\n              <Tooltip />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        }\r\n\r\n        {this.state.expanded &&\r\n          <div className=\"extra\">\r\n            {event.venue && event.venue.name &&\r\n              <p className=\"address\">\r\n                {event.venue.name\r\n                  + ', ' + event.venue.address_1\r\n                  + ', ' + event.venue.city\r\n                  + ', ' + event.venue.localized_country_name\r\n                }\r\n              </p>\r\n            }\r\n            <div className=\"description\"\r\n              dangerouslySetInnerHTML={{ __html: event.description }} />\r\n            <p className=\"visibility\">\r\n              {event.visibility}\r\n            </p>\r\n            <a className=\"link\"\r\n              href={event.link}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n              Event Link\r\n              </a>\r\n          </div>\r\n        }\r\n\r\n        <button className=\"details-btn\"\r\n          onClick={this.onDetailsButtonClicked}>\r\n          Details\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","const mockEvents = {\r\n  city: {\r\n    id: 1007700,\r\n    city: 'München',\r\n    lat: 48.14,\r\n    lon: 11.58,\r\n    state: '',\r\n    country: 'de',\r\n    zip: 'meetup3',\r\n    member_count: 1257\r\n  },\r\n  events: [\r\n    {\r\n      created: 1591348394000,\r\n      duration: 385200000,\r\n      id: '271099242',\r\n      name: 'International JavaScript Conference Munich 2020',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1603695600000,\r\n      local_date: '2020-10-26',\r\n      local_time: '08:00',\r\n      updated: 1591348394000,\r\n      utc_offset: 3600000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 13,\r\n      venue: {\r\n        id: 26495814,\r\n        name: 'Holiday Inn München - Stadtzentrum',\r\n        lat: 48.13063049316406,\r\n        lon: 11.589532852172852,\r\n        repinned: false,\r\n        address_1: 'Hochstraße 3',\r\n        city: 'München',\r\n        country: 'de',\r\n        localized_country_name: 'Germany'\r\n      },\r\n      is_online_event: false,\r\n      group: {\r\n        created: 1497515784000,\r\n        name: 'International JavaScript Conference',\r\n        id: 24474394,\r\n        join_mode: 'approval',\r\n        lat: 48.13999938964844,\r\n        lon: 11.579999923706055,\r\n        urlname: 'International-JavaScript-Conference',\r\n        who: 'Mitglieder',\r\n        localized_location: 'München, Germany',\r\n        state: '',\r\n        country: 'de',\r\n        region: 'en_US',\r\n        timezone: 'Europe/Berlin'\r\n      },\r\n      link: 'https://www.meetup.com/International-JavaScript-Conference/events/271099242/',\r\n      description: '<p>Every year in October, International JavaScript Conference Munich is where seasoned experts get together to discuss methods, libraries, services, models and algorithms to use. We are looking forward to meeting you this year as well!</p> ',\r\n      visibility: 'public',\r\n      member_pay_fee: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport { mockEvents };","import axios from 'axios';\r\nimport { mockEvents } from './mock-events';\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n\r\n  if (type === 'get') {\r\n    url = 'https://y3pp0g5ayc.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\r\n      + key;\r\n  } else if (type === 'renew') {\r\n    url = 'https://y3pp0g5ayc.execute-api.eu-central-1.amazonaws.com/dev/api/refresh_token/'\r\n      + key;\r\n  }\r\n\r\n  const tokenInfo = await axios.get(url);\r\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n  localStorage.setItem('last_saved_time', Date.now());\r\n  return tokenInfo.data.access_token;\r\n}\r\n\r\nasync function getAccessToken() {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (!accessToken) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    if (!code) {\r\n      window.location.href =\r\n        'https://secure.meetup.com/oauth2/authorize?client_id=p5gcudadjt1as5fs4ddq45kvup&response_type=code&redirect_uri=https://lillapulay.github.io/meetup/';\r\n      return null;\r\n    }\r\n    return getOrRenewAccessToken('get', code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken;\r\n  }\r\n\r\n  const refreshToken = localStorage.getItem('refresh_token');\r\n  return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [\r\n      {\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n      + query\r\n      + '&access_token=' + token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem('lastEvents');\r\n    return JSON.parse(events);\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n      + '&access_token='\r\n      + token;\r\n\r\n    if (lat && lon) {\r\n      url += '&lat=' + lat + '&lon=' + lon;\r\n    }\r\n\r\n    if (page) {\r\n      url += '&page=' + page;\r\n    }\r\n\r\n    const result = await axios.get(url);\r\n\r\n    const events = result.data.events;\r\n    if (events.length) {\r\n      localStorage.setItem('lastEvents', JSON.stringify(events));\r\n    }\r\n\r\n    return events;\r\n  }\r\n  return [];\r\n}\r\n\r\nexport { getSuggestions, getEvents };","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'black';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, WarningAlert, ErrorAlert };","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    getSuggestions(value).then(suggestions => {\r\n      this.setState({ suggestions });\r\n\r\n      if (value && suggestions.length === 0) {\r\n        this.setState({\r\n          infoText: 'We can not find the city you are looking for. Please try another city.',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: '',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          placeholder=\"City\" />\r\n\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item =>\r\n            <li\r\n              key={item.name_string}\r\n              onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\r\n              {item.name_string}\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    number: 32,\r\n  }\r\n\r\n  onNumberChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ number: value });\r\n    this.props.updateEvents(null, null, value);\r\n\r\n    if (value < 1) {\r\n      this.setState({ errorText: 'Number should be at least 1.' });\r\n    } else {\r\n      this.setState({ errorText: '' });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <ErrorAlert text={this.state.errorText} />\r\n        <span>Show</span>\r\n        <input\r\n          type=\"number\"\r\n          className=\"number-of-events\"\r\n          onChange={this.onNumberChanged}\r\n          value={this.state.number} />\r\n        <span>Events</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport { WarningAlert } from './Alert';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    lat: null,\n    lon: null,\n    page: null,\n    warningText: ''\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (!navigator.onLine) {\n      this.setState({ warningText: 'You are currently offline. Connect to the internet to perform a new search.' });\n    } else {\n      this.setState({ warningText: '' })\n    }\n\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page)\n        .then(events => this.setState({ events, lat, lon })\n        );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page)\n        .then(events => this.setState({ events, page })\n        );\n    } else {\n      getEvents(this.state.lat, this.state.lon, page)\n        .then(events => this.setState({ events })\n        );\n    }\n  }\n\n  countEventsOnADate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = [];\n    const currentDate = moment();\n\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days');\n      const dateString = currentDate.format('YYYY-MM-DD');\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count });\n    }\n    return next7Days;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <WarningAlert text={this.state.warningText} />\n\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}>\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('0056f6d81e034e608dc1b5b08cef5836').install();"],"sourceRoot":""}